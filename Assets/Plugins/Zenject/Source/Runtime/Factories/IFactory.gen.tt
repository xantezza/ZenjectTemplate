<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#if UNITASK_PLUGIN
using Cysharp.Threading.Tasks;
#else
using System.Threading.Tasks;
#endif

namespace Zenject
{
<#
    for (int paramCount = 0; paramCount <= 10; paramCount++)
    {
        var range = Enumerable.Range(0, paramCount);
        var tParams = string.Join(", ", range.Select(x => "in TParam" + (x + 1)));
        if (!string.IsNullOrEmpty(tParams))
            tParams += ",";
        var namedParams = string.Join(", ", range.Select(x => "TParam" + (x + 1) + " param" + (x + 1)));
        var separator = paramCount > 0 ? "," : "";

        var names = string.Join(", ", range.Select(x => "param" + (x + 1)));
#>
    public interface IFactory<<#= tParams #>TValue> : IFactory
    {
        TValue Create(<#= namedParams #>);

#if UNITASK_PLUGIN
        UniTask<TValue> CreateAsync(<#= namedParams #>) => UniTask.FromResult(Create(<#= names #>));
#else
        Task<TValue> CreateAsync(<#= namedParams #>) => Task.FromResult(Create(<#= names #>));
#endif
    }

<#
    }
#>
}